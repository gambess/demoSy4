{% extends 'base.html.twig' %}

{% set title_label = "Región de " ~ region.nombre  %}

{% block title %}{{ title_label }}{% endblock %}

{% block body %}
    <h1>FICHA DE LA {{ title_label | upper }}</h1>
    <br />
    <table class="table">
        <tbody>
            <tr>
                <th class="alert alert-info" role="alert">Ubicación</th>
                <td>En Chile</td>
            </tr>
            <tr>
                <th class="alert alert-info" role="alert">Coordenadas</th>
                <td>{{ region.latitud }} , {{ region.longitud }}</td>
            </tr>
            <tr>
                <th class="alert alert-info" role="alert" >Altura</th>
                <td>{{ region.altura }} msnm</td>
            </tr>
            <tr>
                <th class="alert alert-info" role="alert">Descripción</th>
                <td>{{ region.descripcion }}</td>
            </tr>
            <tr>
                <th class="alert alert-info" role="alert">Acciones</th>
                <td>
                    <a href="{{ path('region_edit', {'id': region.id}) }}" title="Ir a Editar Región {{ region.nombre }}">
                        <span class="glyphicon glyphicon-edit" aria-hidden="true"></span>
                    </a>
                    <a href="{{ path('region_index') }}"  title="Ir a Gestiona Regiones">
                        <span class="glyphicon glyphicon-list-alt" aria-hidden="true"></span>
                    </a>
                    <a href="{{ path('provincia_index') }}" title="Ir a Gestiona Provincias">
                        <span class="glyphicon glyphicon-menu-hamburger" aria-hidden="true"></span>
                    </a>
                    <a href="{{ path('comuna_index') }}" title="Ir a Gestiona Comunas">
                        <span class="glyphicon glyphicon-list-alt" aria-hidden="true"></span>
                    </a>
                    <a href="{{ path('localidad_index') }}" title="Ir a Gestiona Localidades">
                        <span class="glyphicon glyphicon-menu-hamburger" aria-hidden="true"></span>
                    </a>
                    {{ include('region/_delete_form.html.twig') }}
                </td>
            </tr>
        </tbody>
    </table>
    {% if region.latitud and region.longitud %}
        <div id="map"></div>
    {% else %}
        <div class="alert alert-warning" role="alert">
            No se han ingresado las coordenadas de la Región {{ region.nombre }}.
            Si desea ver el mapa deben ingresar las coordenadas a través del backoffice.
        </div>    
    {% endif %}
{% endblock %}

{% if region.latitud and region.longitud %}
    {# javascript for render map #}
    {% block javascripts %}
        {{ parent() }}
        <script>
            var styles = [
                {
                    featureType: 'administrative',
                    elementType: 'geometry',
                    "stylers": [
                        {"visibility": "on"},
                        {"weight": 2},
                        {"color": "#FFC107"}
                    ]
                }
                ,
                {
                    "featureType": "road",
                    "elementType": "geometry",
                    "stylers": [
                        {"visibility": "off"}
                    ]
                }
                ,
                {
                    "featureType": "administrative.province",
                    "stylers": [
                        {"visibility": "on"}
                    ]
                }
                ,
                {
                    "featureType": "administrative.locality",
                    "stylers": [
                        {"visibility": "off"}
                    ]
                }
                ,
                {
                    "featureType": "road",
                    "elementType": "labels",
                    "stylers": [
                        {"visibility": "off"}
                    ]
                }
            ];
            var map;
            var service;
            var infowindow;
            var coordenas = [];
            var InforObj = [];
            function initMap() {
            {#                var aricaCenter = new google.maps.LatLng(-18.548861, -69.662291);#}
                    var regionCenter = new google.maps.LatLng({{ region.latitud }},           {{ region.longitud }} );
                    infowindow = new google.maps.InfoWindow();
                    map = new google.maps.Map(document.getElementById('map'), {
                        center: regionCenter,
                        zoom: 9,
                        draggable: true,
                        animation: google.maps.Animation.DROP,
                        mapTypeId: 'roadmap',{# mapTypeId: 'satellite', 'terrain', 'hybrid' #}
                        styles: styles
                    });
            {#          var comunas = {
                          arica: {
                              query: 'Provincia de Arica',
                              fields: ['name', 'geometry']
                          }
                          ,
                          camarones: {
                              query: 'Provincia de Parinacota',
                              fields: ['name', 'geometry']
                          }
                                 ,
                                 putre: {
                                     query: 'Comuna de Putre',
                                     fields: ['name', 'geometry']
                                 }
                                 ,
                                 grallagos: {
                                     query: 'Comuna de General',
                                     fields: ['name', 'geometry']
                                 }
                                         };#}
            {#                    console.log(comunas);#}
            {#$.each(comunas, function (name, obj) {
                        
                var service = new google.maps.places.PlacesService(map);
                service.findPlaceFromQuery(obj, function (results, status) {
                    if (status === google.maps.places.PlacesServiceStatus.OK) {
                        for (var i = 0; i < results.length; i++) {
                            createMarker(results[i]);
                        }
                        console.log(results);
                        coordenas.push(results[0].geometry.location.toJSON());
                                
                    }
                });
            });
            console.log(coordenas);#}
                    var geocoder = new google.maps.Geocoder();
                    geocodeAddress('{{ title_label }}', geocoder, map);
                }

                function geocodeAddress(address, geocoder, resultsMap) {
                    geocoder.geocode({'address': address}, function (results, status) {
                        if (status === 'OK') {
                            console.log(results);
                            addMarkerInfo('{{ region.id }}',
                                    results[0].address_components[0].long_name,
                                    '{{ region.descripcion }}',
                                    results[0].geometry.location,
                                    resultsMap);
            {#                            createMarker(results[0], resultsMap);#}
                            resultsMap.setCenter(results[0].geometry.location);
            {#                            var ne = results[0].geometry.bounds.getNorthEast();
                                        var sw = results[0].geometry.bounds.getSouthWest();#}

            {#                            var jsonNE = ne.toJSON();
                                        var jsonSW = sw.toJSON();#}
            {#                                                        console.log(results[0].geometry.bounds.toJSON());#}
            {#coordenas.push(ne);
            coordenas.push(sw);#}
                            //coordenas.push(sw.toJSON());
            {#                            console.log(coordenas);#}
                            // Construct the polygon.

            {#                            var borderArea = new google.maps.Polygon({
                                            paths: coordenas,
                                            strokeColor: '#FF0000',
                                            strokeOpacity: 0.8,
                                            strokeWeight: 2,
                                            fillColor: '#FF0000',
                                            fillOpacity: 0.35
                                        });
                                        borderArea.setMap(resultsMap);#}
            {#var rectangle = new google.maps.Rectangle({
                strokeColor: '#FF0000',
                strokeOpacity: 0.8,
                strokeWeight: 2,
                fillColor: '#FF0000',
                fillOpacity: 0.35,
                map: resultsMap,
                //bounds: results[0].geometry.bounds
                bounds: 
                {
                    north: 33.685,
                    south: 33.671,
                    east: -116.234,
                    west: -116.251
                }
            });#}


                        } else {
                            alert('Geocode was not successful for the following reason: ' + status);
                        }
                    });
                }

{#                function createMarker(place, map) {
                    var marker = new google.maps.Marker({
                        map: map,
                        position: place.geometry.location
                    });
                    google.maps.event.addListener(marker, 'click', function () {
                        infowindow.setContent(place.formatted_address);
                        infowindow.open(map, this);
                    });
                }#}

                function addMarkerInfo(idRegion, placeName, description, position, map) {
            {#                for (var i = 0; i < markersOnMap.length; i++) {#}
                    var contentString = '<div class="alert alert-info" role="alert">'
                            + '<p class="h5"><a href="http://demo.localhost/region/'
                            + idRegion + '/edit" title="Ir a Editar ' + placeName + '">' 
                            + placeName + '</a></span>'
                            + '<p><small>' + description + '.</small></p></div>';
                    const marker = new google.maps.Marker({position: position, map: map});
                    const infowindow = new google.maps.InfoWindow({content: contentString, maxWidth: 350});
                    marker.addListener('click', function () {
                        closeOtherInfo();
                        infowindow.open(marker.get('map'), marker);
                        InforObj[0] = infowindow;
                    });
                    // marker.addListener('mouseover', function () {
                    //     closeOtherInfo();
                    //     infowindow.open(marker.get('map'), marker);
                    //     InforObj[0] = infowindow;
                    // });
                    // marker.addListener('mouseout', function () {
                    //     closeOtherInfo();
                    //     infowindow.close();
                    //     InforObj[0] = infowindow;
            {#                // });#}
                }

                function closeOtherInfo() {
                    if (InforObj.length > 0) {
                        /* detach the info-window from the marker ... undocumented in the API docs */
                        InforObj[0].set("marker", null);
                        /* and close it */
                        InforObj[0].close();
                        /* blank the array */
                        InforObj.length = 0;
                    }
                }
        </script>
        <script async defer
                src="https://maps.googleapis.com/maps/api/js?key={{ app.request.server.get("GOOGLE_API_KEY") }}&libraries=places&callback=initMap">
        </script>
    {% endblock %}
{% endif %}
